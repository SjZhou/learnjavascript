字符串：
1)ASCII字符可以以\x##形式的十六进制表示，如：
	'\x41'; //完全等同于'A'

2）Unicode字符可以以\u#### 的形式表示，如：
	'\u4e2d\u6587'; // 完全等同于 '中文'

3)多行字符串
由于多行字符串用\n写起来比较费事，所以最新的ES6标准新增了一种多行字符串的表示方法，用反引号 ` ... ` 表示：
`这是一个
多行
字符串`;
注意：反引号在键盘的ESC下方，数字键1的左边：

4)模板字符串 
如果有很多变量需要连接，用+号就比较麻烦。ES6新增了一种模板字符串，表示方法和上面的多行字符串一样，但是它会自动替换字符串中的变量：
var name = '小明';
var age = 20;
var message = `你好, ${name}, 你今年${age}岁了!`;
alert(message);
注意：使用的是反引号。

5)字符串是不可变的，如果对字符串的某个索引赋值，不会有任何错误，但是，也没有任何效果：
var s = 'Test';
s[0] = 'X';
alert(s); // s仍然为'Test'

JavaScript 为字符串提供了一些常用的方法，注意，调用这些方法本身不会改变原有字符串的内容，而是返回一个新字符串：
toUpperCase() 把一个字符串全部变为大写。
toLowerCase() 把一个字符串全部变为小写。
indexOf()会搜索指定字符串出现的位置：
	var s = 'hello, world';
	s.indexOf('world'); // 返回7
	s.indexOf('World'); // 没有找到指定的子串，返回-1
substring()返回指定索引区间的子串：
	var s = 'hello, world'
	s.substring(0, 5); // 从索引0开始到5（不包括5），返回'hello'
	s.substring(7); // 从索引7开始到结束，返回'world'
